generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")

}

model User {
  id        String   @id @default(uuid()) 
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  houses    House[]  @relation("UserHouses")
}


model House {
  id                      Int      @id @default(autoincrement())
  userId                  String?  
  regionId                Int?     // Foreign key to the Region model
  name                    String?
  address                 String
  phoneNumber             String
  spaceForPeople          Int?
  additionnalInformation  String?
  taken                   Boolean  @default(false)
  validated               Boolean  @default(false)  // Field for validation status

  user                    User?    @relation(fields: [userId], references: [id], name: "UserHouses")
  region                  Region?  @relation(fields: [regionId], references: [id], name: "HouseRegion")
  reports                 Report[] // One-to-many relation with the Report model

  @@index([userId])
  @@index([regionId]) // Index for filtering by region
}

model Report {
  id        Int      @id @default(autoincrement())
  message   String
  houseId   Int      // Foreign key to the House model
  house     House    @relation(fields: [houseId], references: [id])
  createdAt DateTime @default(now())
}


model Shelter {
  id        Int      @id @default(autoincrement())
  name      String
  regionId  Int?     // Foreign key to the Region model
  region    Region?  @relation(fields: [regionId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([regionId])
}


model Region {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  houses House[]  @relation("HouseRegion")
  shelters Shelter[]
}
