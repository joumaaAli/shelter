import axiosInstance from "@/utils/axiosInstance";

// Fetch all services with optional search and region filtering
export const fetchServices = async (search: string = "", regionId?: number) => {
  try {
    const response = await axiosInstance.get("/services", {
      params: { search, regionId },
    });
    return { success: true, data: response.data };
  } catch (error) {
    console.error("Error fetching services:", error);
    return { success: false, error };
  }
};

// Filter services by optional search and region
export const filterServices = async (
  search: string = "",
  regionId?: number
) => {
  try {
    const response = await axiosInstance.get("/services/filter", {
      params: { search, regionId },
    });
    return { success: true, data: response.data };
  } catch (error) {
    console.error("Error fetching services:", error);
    return { success: false, error };
  }
};

// Add a new service (omit ID as it will be generated by the DB)
export const addService = async (serviceData: any) => {
  try {
    const response = await axiosInstance.post("/services/create", serviceData);
    return { success: true, data: response.data };
  } catch (error) {
    console.error("Error adding service:", error);
    return { success: false, error };
  }
};

// Update an existing service by ID
export const updateService = async (serviceData: any) => {
  try {
    const response = await axiosInstance.put(
      `/services/${serviceData.id}`,
      serviceData
    );
    return { success: true, data: response.data };
  } catch (error) {
    console.error("Error updating service:", error);
    return { success: false, error };
  }
};

// Delete a service by ID
export const deleteService = async (id: number) => {
  try {
    const response = await axiosInstance.delete(`/services/${id}`);
    return { success: true, data: response.data };
  } catch (error) {
    console.error("Error deleting service:", error);
    return { success: false, error };
  }
};

// Report a service
export const reportService = async (reportData: {
  serviceId: number;
  message: string;
}) => {
  try {
    const response = await axiosInstance.post("/reports/services", reportData);
    return { success: true, data: response.data };
  } catch (error) {
    console.error("Error reporting service:", error);
    throw error;
  }
};
